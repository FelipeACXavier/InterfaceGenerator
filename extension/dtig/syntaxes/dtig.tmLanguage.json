{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "DTIG Language",
  "injectionSelector": "L:",
  "patterns": [
    { "include": "#definition" },
    { "include": "#types-keys" },
    { "include": "#getters" },
    { "include": "#functions" },
    { "include": "#append" },
    { "include": "#ctrl-statements" }
  ],
  "repository": {
    "expression": {
      "patterns": [
        { "include": "#getters" },
        { "include": "#types-keys" },
        { "include": "#numbers" },
        { "include": "#operators" },
        { "include": "#arguments" }
      ]
    },
    "definition": {
      "patterns": [
        {
          "captures": {
            "1": { "name": "entity.name.class.dtig" },
            "2": { "name": "constant.character.class.dtig" }
          },
          "name": "constant.character.delimiter.dtig",
          "match": "^<(DTIG_[A-Z_]+)\\b(\\(([A-Z_]*)\\))?.*>"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "captures": {
            "1": { "name": "keyword.function.dtig" },
            "2": { "patterns": [{ "include": "#expression" }] }
          },
          "match": "(DTIG_STR|DTIG_TO_PROTO_MESSAGE|DTIG_TYPE_TO_FUNCTION)\\((.*?)\\)"
        },
        {
          "captures": {
            "1": { "name": "keyword.function.dtig" },
            "2": { "patterns": [{ "include": "#expression" }] }
          },
          "match": "(DTIG>[A-Z_]+?)\\((.*?)\\)"
        }
      ]
    },
    "ctrl-statements": {
      "patterns": [
        {
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "patterns": [{ "include": "#expression" }] }
          },
          "match": "(DTIG_IF|DTIG_FOR)\\((.*?)\\)"
        },
        {
          "name": "keyword.control",
          "match": "\\b(DTIG_ELSE|DTIG_END_IF|DTIG_END_FOR)\\b"
        }
      ]
    },
    "append": {
      "patterns": [
        {
          "name": "entity.name.function.append.dtig",
          "match": "([\\w\\d_]+?DTIG[A-Z_]+)\\b"
        }
      ]
    },
    "getters": {
      "patterns": [
        {
          "name": "variable.name.dtig",
          "match": "(DTIG_ITEM_[A-Z_]+|DTIG_[A-Z_]+?_LENGTH|DTIG_INDEX)"
        },
        {
          "name": "entity.name.class",
          "match": "\\b(DTIG_INPUTS|DTIG_OUTPUTS|DTIG_PARAMETERS)\\b"
        }
      ]
    },
    "types-keys": {
      "patterns": [
        {
          "name": "constant.character.key.dtig",
          "match": "\\b(KEY_[A-Z_]+)\\b"
        },
        {
          "name": "constant.character.type.dtig",
          "match": "\\b(TYPE_[A-Z_]+)\\b"
        }

      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.dtig",
          "match": "-?[0-9]+(\\.[0-9]+)?"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.dtig",
          "match": "(==|!=|<|>|<=|>=)"
        },
        {
          "name": "keyword.operator.dtig",
          "match": "\\b(NOT|AND|OR|IN)\\b"
        }
      ]
    },
    "arguments": {
      "patterns": [
        {
          "name": "variable.parameter.dtig",
          "match": "\\b([A-Z_]+)\\b"
        }
      ]
    }
  },
  "scopeName": "source.dtig.injection"
}
